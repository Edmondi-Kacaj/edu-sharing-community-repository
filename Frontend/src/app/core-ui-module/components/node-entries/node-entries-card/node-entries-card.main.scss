@import '../../../styles/variables';


.grid-card {
    transition: all $transitionNormal;
    // to prevent click animation to float across the whole screen
    overflow: hidden;
    background-color: #fff;
    @include materialShadowBottom();
    display: grid;
    grid-template-columns: auto;
    .dropdown-dummy {
        position: fixed;
    }
    .card-options {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: 5px 5px 7px 5px;
        .card-options-spacer {
            // margin: 0 5px;
            // border-left: 1px solid #ccc;
        }
        app-option-button, button {
            transition: all $transitionNormal;
            margin: 0 2px;
            border-radius: 50%;
            &:hover,
            &:focus {
                background-color: #fff;
            }
        }
    }
    &:not(.grid-card-collection) {
        .card-top-bar {
            background-color: $primaryMediumLight;
        }
    }
    &.grid-card-virtual {
        outline: 2px dashed $nodeVirtualColor;
    }
    .card-top-bar {
        background-color: rgba(255,255,255,.5);
        height: $topBarHeight;

        display: flex;
        gap: 15px;

        align-items: center;
        padding:0 $entriesCardPaddingHorizontal;
        .card-top-bar-type, .card-top-bar-flag {
            display: flex;
            align-items: center;
            justify-content: center;
            user-select: none;
            //align-self: flex-start;
            border-radius: 50%;
            background-color: #fff;
            padding: 5px;
            @include materialShadow();
            i {
                // TODO: do we want to style based on collection type?
                font-size: 18px;
                color: #333;
            }
            img {
                width: 18px;
                height: 18px;
            }
        }
        .card-top-bar-type {

        }
        .card-top-bar-comments,
        .card-top-bar-childobjects {
            > div {
                background-color: rgba(255,255,255,0.75);
                border-radius: 15px;
                display: inline-flex;
                align-items: center;
                min-width: 35px;
                justify-content: center;
                cursor: default;
                user-select: none;
                padding: 2px 8px;
                &.childobject-count {
                    > i {
                        font-size: 13px;
                        margin-left: 4px;
                    }
                }
                &.node-comments {
                    > i {
                        font-size: 13px;
                        margin-right: 4px;
                    }
                }
            }
        }
        .card-top-bar-checkbox {
            mat-checkbox {
                margin-right: -20px;
                position: relative;
                top: -1px;
            }
        }
        .card-top-bar-empty {
            width: 0;
            flex-grow: 1;
        }

    }
    .card-image-area {
        position: relative;
        padding: 0;
        height: $imageHeight;
        overflow: hidden;
        .card-image-backdrop {
            position: absolute;
            width: 100%;
            height: 100%;
            img {
                position: absolute;
                width: 100%;
                height: 100%;
                object-fit: cover;
                @include blurImage(15px);
                opacity: 1;
            }
        }
        > img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            position: relative;
            z-index: 1;
        }
        .card-collection-image {
            display: flex;
            width: 100%;
            height: 100%;
            align-items: center;
            justify-content: center;
            i {
                display: flex;
                align-items: center;
                justify-content: center;
                user-select: none;
                color: rgba(0,0,0,.75);
                background-color: rgba(255,255,255,.5);
                padding: $collectionIconPadding;
                font-size: $collectionIconSize;
                border-radius: 50%;
            }
        }
    }
    .card-meta {
        padding: $entriesCardPaddingVertical $entriesCardPaddingHorizontal 0 $entriesCardPaddingHorizontal;
        background-color: rgba(255,255,255, 0.8);
        display: grid;
        flex-direction: row;
        .card-meta-row {
            display: flex;
            flex-direction: row;
            align-items: center;
            min-height: 2.5em;
            > div {
                cursor: inherit;
                color: $textLight;
                font-size: 85%;
            }
            > app-list-base {
                color: #000;
                flex-grow: 1;
                margin: 5px 0;
                display: flex;
                justify-content: flex-end;
                text-align: end;
                word-break: break-word;
                // height: 1em;
                // @include limitLineCount(1);

            }
            &:first-child {
                > app-list-base {
                    font-size: 120%;
                    height: 1.25 * 2em;
                    text-align: left;
                    @include limitLineCount(2, 1.25);
                }
            }
        }

    }
    &:hover {
        @include materialShadowMediumLarge(false, 0.2);
        .card-meta, .card-options {
            background-color: $primaryVeryLight;
        }
        // transform: scale(1.0075);
    }
    &.grid-card-collection:hover .card-meta {
        background-color: rgba(255,255,255, 0.9);
    }
    .card-options {
        border-top: 1px solid #ddd;
        // margin-top: 2px; white artefact on hover
    }
}
:host ::ng-deep {
    .grid-card app-node-url {
        a.cdk-keyboard-focused {
            position: relative;
            overflow: visible;
            @include setGlobalKeyboardFocus();
            .card-meta {
                background-color: $primaryLight;
                @include setGlobalKeyboardFocus('border');
            }
        }
    }
    .grid-card-collection app-node-url {
        a.cdk-keyboard-focused {
            position: relative;
            overflow: visible;
            @include setGlobalKeyboardFocus('border');
            .card-meta {
                background-color: #fff;
            }
        }
    }
    .card-meta {
        app-list-base {
            app-list-node-license {
                img {
                    height: 20px;
                }
            }
            app-list-collection-info {
                display: flex;
                align-items: center;
                // justify-content: flex-end;
                i {
                    font-size: 12pt;
                    margin: 0 6px;
                }
            }
        }
    }
    .grid-card-collection app-node-url {
        a.cdk-keyboard-focused .card-meta{
            // @TDOO: better focus visibility is required
            background-color: #fff;
        }
    }
}

