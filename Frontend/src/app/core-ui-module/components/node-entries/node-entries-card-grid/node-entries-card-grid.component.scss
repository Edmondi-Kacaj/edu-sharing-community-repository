@use 'sass:math';
@import '../../../styles/variables';


@keyframes OrderAnimationCards {
    0% {
        transform: rotate(-0.25deg);
    }
    50% {
        transform: rotate(0.25deg);
    }
    100% {
        transform: rotate(-0.25deg);
    }
}
.grid-top {
    display: flex;
    align-items: center;
    .title {
        display: flex;
        flex-grow: 1;
    }
    .order-panel {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        > mat-slide-toggle {
            margin-right: 10px;
        }
    }
}
.load-more {
    display: flex;
    justify-content: center;
}
.card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    grid-column-gap: 20px;
    grid-row-gap: 20px;
    grid-template-rows: auto;
    > .card-grid-drag-wrapper {
        position: relative;
        .card-grid-drop-allowed-container,
        .card-grid-drop-blocked-container {
            position: absolute;
            z-index: 1;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            > i {
                background: radial-gradient(circle, #fff 30%, rgba(255,255,255,0.0001) 70%);
                width: 200px;
                height: 200px;
                font-size: 80px;
                display: flex;
                align-items: center;
                justify-content: center;
            }
        }
        .card-grid-drop-allowed-container {
            > i {
                color: $colorStatusPositive;
            }
        }
        .card-grid-drop-blocked-container {
            backdrop-filter: blur(5px);
            > i {
                color: $colorStatusNegative;
            }
        }
        &.card-grid-drop-blocked {
            outline: 2px dashed $colorStatusNegative;
        }
        &.card-grid-drop-allowed {
            outline: 2px dashed $colorStatusPositive;
        }
        &.cdk-drop-list-dragging {
            > *:first-child {
                display: none;
            }
        }
    }
    &.card-grid-reorder {
        > .card-grid-order-wrapper {
            $orderAnimationTime: 0.5s;
            animation-iteration-count: infinite;
            animation-duration: $orderAnimationTime;
            animation-name: OrderAnimationCards;
            &:nth-of-type(2n) {
                animation-delay: 0s;
            }
            &:nth-of-type(2n + 1) {
                animation-delay: math.div(-$orderAnimationTime, 2);
            }
            &:nth-of-type(3n) {
                animation-delay: math.div(-$orderAnimationTime, 4);
            }
            &:nth-of-type(5n) {
                animation-delay: math.div(-$orderAnimationTime, 8);
            }
            &.cdk-drop-list-dragging {
                opacity: 0.75;
                outline: 3px solid $primary;
                > *:last-child {
                    display: none;
                }
            }
        }
    }
    > li.global-options {
        display: grid;
        grid-template-columns: auto;
        grid-template-rows: repeat(auto-fit, minmax(70px, 1fr));
        grid-row-gap: 20px;
        height: 100%;
        min-height: 250px;
        &.global-options-small {
            min-height: 130px;
        }
        .global-option-btn {
            display: flex;
            height: 100%;
            padding: 0;
        }
        .global-option {
            cursor: pointer;
            display: flex;
            @include materialShadow();
            width: 100%;
            height: 100%;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            border: 3px dashed $primary;
            color: $primary;
            > i {
                font-size: 32px;
                margin-bottom: 5px;
            }
            > label {
                cursor: pointer;
                font-weight: bold;
            }
            &:hover, &:focus {
                background-color: $primaryVeryLight;
            }
        }
    }
}
:host ::ng-deep {
    .card-grid {
        > li.global-options {
            .global-option-btn {
                .mat-button-wrapper {
                    width: 100%;
                    height: 100%;
                }
            }
        }
    }
}
