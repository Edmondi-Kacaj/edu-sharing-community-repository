@import '../app/core-ui-module/styles/variables';

/*
  Custom CSS for colors and looks which override the materialize.css
*/
.btn {
    background-color: $primary !important;
    color: $textOnPrimary !important;
}
.btn,
.btn-flat {
    display: inline-flex;
    align-items: center;
    > span {
        margin-left: 5px;
        flex-grow: 1;
    }
    > .material-icons {
        display: inline-flex;
        align-items: center;
    }
}
.btn:focus:not(.disabled) {
    background-color: $primaryDark !important;
}
.btn-complementary:focus:not(.disabled) {
    background-color: rgb(var(--palette-accent-700)) !important;
}
.btn-flat {
    color: $primary;
    background: #fff;
    &:hover {
        background-color: $buttonHoverBackground;
    }
}
.btn,
.btn-flat {
    text-align: center;
    line-height: 1.25;
    overflow-y: hidden;
}
.card .btn-flat {
    color: $primary !important;
}
.card .card-content .card-title {
    font-size: 12pt;
    line-height: initial;
    height: 48px;
}
.waves-effect .waves-ripple {
    /*background-color: rgba(#ccc, 0.65);*/
    background-color: rgba(0, 0, 0, 0.1);
}
/* Does not work with angular. Disabling it */
.tabs .indicator {
    display: none;
}
.tabs .tab a {
    padding: 0 10px;
}
input[type='date']::-webkit-inner-spin-button {
    -webkit-appearance: none;
    display: none;
}
.spinner-blue,
.spinner-blue-only {
    border-color: $primary;
}
/* for some reason they need to be declared seperately */
@mixin sliderThumb() {
    background-color: $primary;
    border: 1px solid #fff;
    position: relative;
    top: -1px;
}
@include placeholder {
    color: $placeholderColor;
}
input[type='range']::-webkit-slider-thumb {
    @include sliderThumb();
}
input[type='range']::-moz-range-thumb {
    @include sliderThumb();
}
input[type='range']::-ms-thumb {
    @include sliderThumb();
}
input[type='checkbox'].filled-in:not(:checked) + label:after {
    border-color: $primary;
}
input[type='checkbox'].filled-in:indeterminate + label:before {
    background: $primary;
    -webkit-transform: none;
    transform: none;
    left: 5px;
    top: 8px;
    border-width: 1px;
    width: 10px;
}
input[type='checkbox'].filled-in:checked + label:after {
    background-color: $primary;
    border-color: $primary;
}
input[type='checkbox'].filled-in.tabbed:checked:focus + label:after {
    background-color: $primaryDark;
    border-color: $primaryDark;
}
input[type='checkbox'].filled-in:checked + label:before {
    border-right-color: $textOnPrimary;
    border-bottom-color: $textOnPrimary;
}
.datepicker-calendar {
    left: -30px;
}
input:not([type]),
input[type='text'],
input[type='email'],
input[type='password'],
input[type='number'],
select,
textarea.materialize-textarea,
input[type='search'] {
    &:not(.mat-input-element) {
        height: 3rem;
        -webkit-appearance: none;
        border: 1px solid #ccc;
        padding: 0 0.75em;
        width: calc(100% - 1.65em);
        border-radius: 3px;
        background-color: #fff;
        &:disabled {
            border-style: solid;
        }
    }
}
select {
    &:not(.mat-input-element) {
        width: 100%;
    }
}
textarea.materialize-textarea {
    &:not(.mat-input-element) {
        padding: 0.75em;
        width: calc(100% - 1.65em);
    }
}

input[type='checkbox'] + label,
input[type='radio'] + label,
.switch > label {
    font-weight: normal;
    color: $textLight;
    font-size: 1rem;
    margin-left: 0;
    text-transform: none;
    line-height: 17pt;
}
input:not([type]),
input[type='search'],
input[type='email'],
input[type='password'],
input[type='number'],
input[type='text'],
.materialize-textarea {
    &:not(.mat-input-element) {
        /*box-shadow: 0 1px 0 0 $primary!important;
    border-bottom: 1px solid $primary!important;*/
        &:focus:not([readonly]) {
            border-color: $primaryMediumLight !important;
            box-shadow: none !important;
        }

        &.valid {
            border-color: $colorStatusPositive !important;
            box-shadow: none !important;
        }
    }
}
.materialize-textarea {
    overflow-y: auto !important;
}
[type='radio'] {
    & + label {
        padding-left: 30px !important;
    }
    & + label:before,
    & + label:after {
        top: -2px;
        width: 20px;
        height: 20px;
    }

    &:not([disabled]) + label:before,
    &:not([disabled]) + label:after {
        border: 2px solid $primary !important;
    }
    &:checked + label:after {
        background: radial-gradient(ellipse at center, $primary 0, $primary 46%, #fff 52%);
    }
}

select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    display: inherit;
    background-position: calc(100% - 10px);
}
select,
.select-wrapper .caret {
    background-color: #fff;
    background-image: url('../assets/images/select-arrow.svg');
    background-size: 8px;
    background-repeat: no-repeat;
}
.select-wrapper {
    .caret {
        color: transparent !important;
    }
}

select:focus {
    outline: 0;
}
option {
    padding: 0.3em 1em 0.3em 1em;
}
.collectionContainer {
    position: relative;
}
.collection {
    .disabled {
        color: $textLight !important;
        cursor: not-allowed;
    }
    a.collection-item {
        color: $primary;
        &:not(.active):hover {
            background-color: $itemSelectedBackground;
        }
    }
}
.btn-shadow {
    box-shadow: 0px 1px 3px #aaa !important;
}
.determinate-failed {
    background-color: $colorStatusNegative !important;
}
.progress {
    background-color: $primaryLight;
    .indeterminate,
    .determinate {
        background-color: $primary;
    }
    .determinate-finished {
        background-color: $colorStatusPositive;
    }
}

.md-input-wrapper input,
.md-input-wrapper input:focus:not([readonly]) {
    margin-bottom: 0;
    border-bottom: none !important;
    box-shadow: none !important;
    height: auto;
}
input[type='text']:focus:not([readonly]) + label,
input[type='password']:focus:not([readonly]) + label,
input[type='search']:focus:not([readonly]) + label,
.md-input-wrapper input:focus:not([readonly]) + label,
input:focus:not([readonly]) + label {
    color: $textLight;
}
/* materialize select dropdowns */
.dropdown-content li > a,
.dropdown-content li > span {
    color: $primary;
    font-size: 10pt;
}
.switch label .lever:after {
    width: 18px;
    height: 18px;
}
.switch label input[type='checkbox'] + .lever {
    background-color: $cardSeparatorLineColor;
    height: 12px;
}
.switch label input[type='checkbox']:checked + .lever {
    background-color: $primaryMediumLight;
}
.switch label input[type='checkbox']:checked + .lever:after {
    background-color: $primary;
}
.switch label input[type='checkbox']:checked:disabled + .lever {
    background-color: #999;
}
.md-input-underline {
    color: $textLight;
}
.btn-icon,
.btn-icon-only {
    line-height: 30px;
}
.btn-icon-only {
    width: 52px;
    overflow: visible;
}
.md-toolbar input {
    margin-bottom: 0;
}
.btn-icon i,
.btn-icon-only i,
.align-icon {
    position: relative;
    left: -10px;
}

img.align-icon {
    top: 0;
}

.tabs {
    background-color: transparent;
}
.tab a {
    color: $textLight !important;
    .material-icons {
        font-size: 20px;
        margin-right: 3px;
    }
}
.tabs .indicator {
    background-color: $primary;
}
.tab .active {
    color: #000 !important;
    background: linear-gradient(
        to top,
        $tabColor 0%,
        $tabColor 5px,
        transparent 5px,
        transparent 5%
    );
}
.tabs {
    /* background: linear-gradient(to top, transparent 0,transparent 5px,$cardSeparatorLineColor 5px,$cardSeparatorLineColor 6px,transparent 6px); */
    border-bottom: 1px solid #ccc;
}
.row-dark {
    background-color: $workspaceTopBarBackground;
}
.row-dark .tab a {
    color: mix($workspaceTopBarBackground, $workspaceTopBarFontColor, 45%) !important;
}
.row-dark .tab .active {
    color: $workspaceTopBarFontColor !important;
    background: linear-gradient(
        to top,
        $tabColorLight 0,
        $tabColorLight 5px,
        transparent 5px,
        transparent 5%
    );
    font-weight: bold;
}
.collection .collection-item.active {
    color: $primary;
    background: linear-gradient(to right, $tabColorDark 0, $tabColorDark 5px, #fff 5px, #fff 5%);
}
.btn-floating,
.btn-floating:hover {
    background-color: $primary;
    i {
        height: 100%;
    }
}
.btn-complementary {
    background-color: $primaryComplementary !important;
}
.btn-floating-inverted {
    background-color: #fff;
}
.btn-floating-inverted i {
    color: $primary;
}
.btn-floating-inverted i:hover {
    color: #fff;
}
.collection {
    @include materialShadow();
    z-index: 132;
    @include clickable();
}
.collection i {
    position: relative;
    top: 7px;
    left: -5px;
}
span.thumb {
    display: none; /* preview thumb for range does not work */
}
.btn-floating.btn-large i {
    font-size: 28px;
}
.btn,
.btn-large,
.btn-floating,
.btn-large,
.btn-flat {
    icon {
        font-size: 1.3rem;
        i {
            font-size: inherit;
        }
    }
}
.collection {
    .collection-item {
        padding: 2px 20px 9px 20px;
        border-bottom: none;
    }
}
.collection-item-separate {
    border-top: 1px solid #ccc !important;
}
.ngx-datepicker-container .ngx-datepicker-calendar-container {
    top: 10px !important;
}
/* ng2-datepicker */
.ngx-datepicker-input {
    padding: 0 !important;
    color: $textPrimary !important;
    margin-top: 10px !important;
    text-align: center;
    width: 298px !important;
    cursor: pointer;
}

/* material angular2 */
.md-sidenav-focus-trap > .cdk-focus-trap-content {
    overflow-x: hidden;
}

.mat-sidenav-focus-trap > .cdk-focus-trap-content {
    height: auto !important;
    min-height: 100%;
}

/* noUiSlider */
.noUi-horizontal {
    height: 3px;
}
.noUi-horizontal .noUi-handle {
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background-color: $primary;
    box-shadow: none;
    border: 2px solid $backgroundColor;
}
[disabled] {
    .noUi-handle {
        background-color: #aaa;
    }
    .noUi-connect {
        background-color: #fff;
    }
}
.noUi-target {
    background: #ccc;
    border-radius: 4px;
    border: none;
    box-shadow: none;
}
.noUi-handle:after,
.noUi-handle:before {
    display: none;
}
.noUi-tooltip {
    background-color: transparent;
    color: #000;
    border: none;
    border-radius: 50%;
    font-size: 8pt;
    min-width: 50px;
    label {
        font-size: 6pt;
        margin-right: 5px;
    }
}
.noUi-connect {
    margin-left: -10px;
    margin-right: 5px;
    background-color: $primaryMediumLight;
}
.noUi-base {
    right: -10px;
    background-color: #ccc;
}
@media all and (max-width: ($mobileWidth)) {
    .collectionContainer {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: auto;
        z-index: 151;
        min-height: 100%;
        overflow: auto;
        @include iosScrolling();
        > div {
            position: absolute !important;
            top: calc(100% - 128px) !important;
            bottom: auto !important;
            left: 0 !important;
            width: 100% !important;
            margin-bottom: 0;
        }
        .collection {
            box-shadow: none;
            border: none;
        }
        .collection .collection-item {
            padding: 5px 20px 13px 20px;
            border-bottom: none;
        }
    }
    /* ng2-datepicker */
    .ngx-datepicker-input {
        width: auto !important;
    }
    .ngx-datepicker-container .ngx-datepicker-calendar-container {
        left: -2% !important;
    }
}
