// DO NOT EDIT THIS FILE
// this is the base config file
// make any custom modifications to the file "edu-sharing.conf"

// basic repository features
repository: {
    multilang: false // multilang support, this is a legacy variable and only "false" is supported
    // permission mapping from remote lms systems-
    lmsCodes: "moodle,moodle/course:delete,moodle/course:update;fronter,fronter/course:delete,fronter/course:update;opal,opal/course:delete,opal/course:update"
    // deliver repository metadata with url: http://host:8080/edu-sharing/metadata
    exportMetadata: true
    //database related options
    database:{
        // scripts to run on startup (e.g. for updating tables)
        // will be run in the order of the array
        scripts:{
            // core scripts, please DO NOT override or change them
            core:["tracking.sql.properties","tracking.u1.sql.properties","tracking.u2.sql.properties","tracking.u3.sql.properties"],
            custom:[] // any custom scripts (this can be safely overriden)
        }
    }
    // statistics endpoints (for providing public information about content counts, user counts, etc.)
    statistics:{
        // shall the iam/person api provide statistics by user?
        // this might impact the system performance
        // if disabled, the profile/about page won't show statistical numbers about an user
        byUser: true
        api:{
            enabled:false
        }
    }
    // allow and control how the system communicates with other systems
    communication:{
        resolveUrlInformation:true // allows the repository to fetch metadata from a url ressource (when saving a link)
    }
    // configure tracking related functions
    tracking:{
        userMode: "none" // the mode to track users, either "obfuscate", "none" or "full"
    }
    // the default required status for users to login. If not set, any status will be accepted
    personActiveStatus: null
    // personActiveStatus: "active"

    // proxy to use for http requests (e.g. querying import data)
    proxy: {
        //host:127.0.0.1
        //proxyhost:proxyhost
        //proxyport:3128
        //proxyuser
        //proxypass
        //nonproxyhosts
    }
}
// rendering related config
rendering {
    // shall the rendering service pre-render (cache) objects after creation?
    prerender: true
}
// config for frontend/security related headers etc.
angular {
    headers: {
        // enable browser XSS protection (1 is usually the default of browsers)
        X-XSS-Protection: "1"
        // configure allowed ulrs where this edu-sharing ui might be embedded as a frame/embed object
        X-Frame-Options: "sameorigin"
        // be careful when modifying these parameters!
        // also test rendering service and external tools, like the app
        Content-Security-Policy: {
            default-src: "* data: blob: 'self' gap://ready"
            connect-src: "'self' gap://ready"
            img-src: "* data: blob:; style-src * 'unsafe-inline'"
            script-src: "* 'unsafe-inline' 'unsafe-eval'"
            font-src: "'self' data:"
        }
        // stricter policy, please be aware that some features like custom html content won't work
        // Content-Security-Policy: {
        //     default-src: "data: blob: 'self' gap://ready"
        //         connect-src: "'self' gap://ready"
        //         img-src: "'self' data: blob:; style-src * 'unsafe-inline'"
        //         script-src: "'self' 'unsafe-inline'"
        //         font-src: "'self' data:"
        //     }
        // }
    }
}
// supported connectors (like tinyMCE, OnlyOffice, ...)
connectorList:{
    connectors:[
        {
            id:"TINYMCE", icon:"edit", showNew: true, onlyDesktop: false, hasViewMode: true,
            filetypes:[
                {mimetype: "text/html",filetype: "html",createable: true,editable: true,editorType: "tinymce"}
            ]
        }
    ]
}

// config for available elasticsearch instances (Stream, Frontpage Cache)
elasticsearch:{
    servers: ["127.0.0.1:9200"]
}
// oai importer config
importer:{
    // threading config
    threads:{
        min:1, // min threads to use (>= 1)
        max:6, // max threads to use
        minSpare:1 // min amount of threads to keep free (so threads=min(threads.max,cpuCount-threads.minSpare))
    }
}

// class to use for the stream service (default StreamServiceNone)
stream: {
    class:StreamServiceNone
    relevancy: {
        property: "ccm:taxonid"
        depth: 1
        actionLimit: 10
    }
}

// config for scheduled jobs
// to override and add custom jobs, we recommend using "jobs.entries += {...}"
jobs: {
    entries: [
        {
            name: "Built up Cache Job"
            class: "org.edu_sharing.repository.server.jobs.quartz.RefreshCacheJob"
            trigger: "Immediate" // fire at startup
        },
        {
            name: "Frontpage Cache Job"
            class: "org.edu_sharing.repository.server.jobs.quartz.UpdateFrontpageCacheJob"
            trigger: "Cron[0 0 0 * * ?]" // fire at 0:00 nightly
        }
    ]
}